esphome:
  name: ble2ha
  platform: ESP32
  board: nodemcu-32s

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass

ota:
captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
#api:
mqtt:
  broker: mqtt.lan
  #discovery: true
  #topic_prefix: esphome/ble2ha


esp32_ble_tracker:

sensor:
  # https://esphome.io/components/sensor/xiaomi_miscale.html
  - platform: xiaomi_miscale
    mac_address: "E0:0F:2D:A6:78:41"
    weight:
      name: "Xiaomi Mi Scale Weight"
      id: weight_miscale
      on_value:
        then:
          # - lambda: |-
          #     if (id(weight_miscale).state >= 70 && id(weight_miscale).state <= 90) {
          #       return id(weight_jaume).publish_state(x);}
          #     else if (id(weight_miscale).state >= 50 && id(weight_miscale).state <= 70) {
          #       return id(weight_judit).publish_state(x);}
          - mqtt.publish:
              topic: !lambda |-
                if (id(weight_miscale).state >= 70 && id(weight_miscale).state <= 90) return "esphome/ble2ha/weight/jaume";
                else return "esphome/ble2ha/weight/judit";
              payload: !lambda |-
                char buf[10];
                sprintf(buf,  "%1.3f", id(weight_miscale).state);
                return ((std::string) buf).c_str();
              retain: true
    impedance:
      name: "Xiaomi Mi Scale Impedance"
      id: impedance_miscale
      on_value:
        then:
            - mqtt.publish:
                topic: !lambda |-
                  if (id(weight_miscale).state >= 70 && id(weight_miscale).state <= 90) return "esphome/ble2ha/impedance/jaume";
                  else return "esphome/ble2ha/impedance/judit";
                payload: !lambda |-
                  char buf[10];
                  sprintf(buf,  "%1.3f", id(impedance_miscale).state);
                  return ((std::string) buf).c_str();
                retain: true
  #         - lambda: |-
  #             if (id(weight_miscale).state >= 70 && id(weight_miscale).state <= 90) {
  #               return id(impedance_jaume).publish_state(x);}
  #             else if (id(weight_miscale).state >= 50 && id(weight_miscale).state <= 70) {
  #               return id(impedance_judit).publish_state(x);}

  # - platform: template
  #   name: Weight Jaume
  #   id: weight_jaume
  #   unit_of_measurement: "kg"
  #   icon: mdi:weight-kilogram
  #   accuracy_decimals: 2
  # - platform: template
  #   name: Impedance Jaume
  #   id: impedance_jaume
  #   unit_of_measurement: "ohm"
  #   icon: mdi:omega
  #   accuracy_decimals: 0
  # - platform: template
  #   name: Weight Judit
  #   id: weight_judit
  #   unit_of_measurement: "kg"
  #   icon: mdi:weight-kilogram
  #   accuracy_decimals: 2
  # - platform: template
  #   name: Impedance Judit
  #   id: impedance_judit
  #   unit_of_measurement: "ohm"
  #   icon: mdi:omega
  #   accuracy_decimals: 0
