esphome:
  name: esp-lobby
  platform: ESP32
  board: esp32-c3-devkitm-1
  platformio_options:
    board_build.flash_mode: dio

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  use_address: esp-lobby.iot

# captive_portal:

# Enable logging
# logger:

# Enable Home Assistant API
api:

mqtt:
  broker: mqtt.jserrats.xyz
  topic_prefix: esphome/lobby
  discovery_prefix: homeassistant
  on_json_message:
    topic: zigbee2mqtt/door_closure_sensor
    then:
      - if:
          condition:
            lambda: 'return x["contact"]==false;'
          then:
            - light.turn_off: led
          else:
            - light.turn_on:
                id: led
                effect: "Scan"
                blue: 0%
                green: 0%
                red: 100%
ota:

time:
  - platform: sntp
    id: esptime

i2c:
  sda: GPIO04
  scl: GPIO05
  frequency: 400kHz

binary_sensor:
  - platform: gpio
    id: door
    name: "Main Door"
    pin:
      number: GPIO19
      mode: INPUT_PULLDOWN
    on_press:
      then:
        - mqtt.publish:
            topic: zigbee2mqtt/lobby_light/set
            payload: "ON"
        - rtttl.play: "zelda_gerudo:d=4,o=5,b=125:16c#,16f#,16g#,8a,16p,16c#,16f#,16g#,a"

  - platform: ld2410
    has_target:
      name: Lobby Presence
      on_press:
        then:
          - mqtt.publish:
              topic: zigbee2mqtt/lobby_light/set
              payload: "ON"
      on_release:
        then:
          - mqtt.publish:
              topic: zigbee2mqtt/lobby_light/set
              payload: "OFF"
switch:
  - platform: ld2410
    bluetooth:
      name: "Lobby LD2410 Bluetooth"

light:
  - platform: neopixelbus
    type: GRB
    variant: WS2811
    pin: GPIO06
    num_leds: 8
    id: led
    effects:
      - pulse:
      - addressable_color_wipe:
      - addressable_rainbow:
      - addressable_scan:
          name: "Scan"
      - addressable_twinkle:
      - addressable_random_twinkle:

display:
  - platform: ssd1306_i2c
    model: "SH1106 128x64"
    id: my_display_oled
    #reset_pin: D0
    address: 0x3C
    pages:
      - id: page1
        lambda: |-
          it.strftime(5, 60, id(roboto), TextAlign::BASELINE_LEFT, "%H:%M", id(esptime).now());

          if (id(weather_state).has_state()) {
          std::map<std::string, std::string> weather_icon_map
            {
              {"clear-night", "\U000F0594"},
              {"cloudy", "\U000F0590"},
              {"fog", "\U000F0591"},
              {"hail", "\U000F0592"},
              {"lightning", "\U000F0593"},
              {"lightning-rainy", "\U000F067E"},
              {"partlycloudy", "\U000F0595"},
              {"pouring", "\U000F0596"},
              {"rainy", "\U000F0597"},
              {"snowy", "\U000F0598"},
              {"snowy-rainy", "\U000F067F"},
              {"sunny", "\U000F0599"},
              {"windy", "\U000F059D"},
              {"windy-variant", "\U000F059E"},
            };
          it.printf(10, 5, id(font4), TextAlign::TOP_LEFT, weather_icon_map[id(weather_state).state.c_str()].c_str());
          }
output:
  - platform: ledc #esp8266_pwm
    pin: GPIO03
    id: rtttl_out

rtttl:
  output: rtttl_out

button:
  - platform: template
    name: "Lobby audio notification"
    on_press:
      then:
        - rtttl.play: "siren:d=8,o=5,b=100:d,e,d,e,d,e,d,e"

font:
  # gfonts://family[@weight]
  - file: "gfonts://Roboto"
    id: roboto
    size: 20
  - file: "gfonts://Roboto"
    id: roboto_small
    size: 14

  - file: "config/materialdesignicons-webfont.ttf"
    id: font4
    size: 40
    glyphs:
      - "\U000F0594" #"clear-night"
      - "\U000F0590" #"cloudy"
      - "\U000F0591" #"fog"
      - "\U000F0592" #"hail"
      - "\U000F0593" #"lightning"
      - "\U000F067E" #"lightning-rainy"
      - "\U000F0595" #"partlycloudy"
      - "\U000F0596" #"pouring"
      - "\U000F0597" #"rainy"
      - "\U000F0598" #"snowy"
      - "\U000F067F" #"snowy-rainy"
      - "\U000F0599" #"sunny"
      - "\U000F059D" #"windy"
      - "\U000F059E" #"windy-variant"

text_sensor:
  - platform: homeassistant
    id: weather_state
    name: "Current Weather Icon"
    entity_id: weather.can_garri
    internal: true

ld2410:

uart:
  tx_pin: GPIO00
  rx_pin: GPIO01
  baud_rate: 256000
  parity: NONE
  stop_bits: 1

number:
  - platform: ld2410
    timeout:
      name: Lobby presence timeout
    max_move_distance_gate:
      name: Lobby max move distance gate
    max_still_distance_gate:
      name: Lobby max still distance gate
