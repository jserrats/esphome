esphome:
  name: esp-datacenter
  platform: ESP32
  board: esp32-c3-devkitm-1
  platformio_options:
    board_build.flash_mode: dio

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  use_address: esp-datacenter.iot

# Enable logging
# logger:

# Enable Home Assistant API
api:

ota:

mqtt:
  broker: mqtt.jserrats.xyz
  topic_prefix: esphome/datacenter
  on_json_message:
  - topic: zigbee2mqtt/studio_light
    then:
      - if:
          condition:
            lambda: 'return x["state"]=="ON";'
          then:
            - light.turn_on: button3_light
          else:
            - light.turn_off: button3_light
  - topic: zigbee2mqtt/workshop_power
    then:
      - if:
          condition:
            lambda: 'return x["state"]=="ON";'
          then:
            - light.turn_on: button2_light
          else:
            - light.turn_off: button2_light
esp32_ble_tracker:

time:
  - platform: sntp
    id: esptime

i2c:
  sda: GPIO04
  scl: GPIO05
  frequency: 400kHz

pcf8574:
  - id: "pcf8574_hub"
    address: 0x20
    pcf8575: true

text_sensor:
  - platform: mqtt_subscribe
    id: uptime
    topic: $SYS/broker/uptime
  - platform: mqtt_subscribe
    id: sandwich_timer
    topic: automations/timer/sandwich/text_countdown


sensor:
  - platform: homeassistant
    id: temperature
    entity_id: weather.can_garri
    attribute: temperature

  - platform: mqtt_subscribe
    id: datacenter_power
    topic: esphome/datacenter-power/sensor/datacenter_power/state

  # https://esphome.io/components/sensor/xiaomi_miscale.html
  - platform: xiaomi_miscale
    mac_address: "E0:0F:2D:A6:78:41"
    weight:
      #name: " Mi Scale Weight"
      id: weight_miscale
      on_value:
        then:
          # - lambda: |-
          #     if (id(weight_miscale).state >= 70 && id(weight_miscale).state <= 90) {
          #       return id(weight_jaume).publish_state(x);}
          #     else if (id(weight_miscale).state >= 50 && id(weight_miscale).state <= 70) {
          #       return id(weight_judit).publish_state(x);}
          - mqtt.publish:
              topic: !lambda |-
                if (id(weight_miscale).state >= 70 && id(weight_miscale).state <= 90) return "esphome/scale/weight/jaume";
                else return "esphome/scale/weight/judit";
              payload: !lambda |-
                char buf[10];
                sprintf(buf,  "%1.3f", id(weight_miscale).state);
                return ((std::string) buf).c_str();
              retain: true
    impedance:
      id: impedance_miscale
      on_value:
        then:
          - mqtt.publish:
              topic: !lambda |-
                if (id(weight_miscale).state >= 70 && id(weight_miscale).state <= 90) return "esphome/scale/impedance/jaume";
                else return "esphome/scale/impedance/judit";
              payload: !lambda |-
                char buf[10];
                sprintf(buf,  "%1.3f", id(impedance_miscale).state);
                return ((std::string) buf).c_str();
              retain: true

binary_sensor:
  - platform: ld2410
    has_target:
      name: Studio Presence
      on_press:
        then:
          - lambda: |-
              id(mydisplay).backlight();
      on_release:
        then:
          - lambda: |-
              id(mydisplay).no_backlight();

  # switch0
  - platform: gpio
    id: switch0
    pin:
      pcf8574: pcf8574_hub
      number: 8
      mode:
        input: true
    on_press:
      then:
        - mqtt.publish:
            topic: zigbee2mqtt/3dprinter/set
            payload: "ON"
    on_release:
      then:
        - mqtt.publish:
            topic: zigbee2mqtt/3dprinter/set
            payload: "OFF"
            
  # switch1
  - platform: gpio
    id: switch1
    pin:
      pcf8574: pcf8574_hub
      number: 9
      mode:
        input: true
    filters:
      - delayed_on_off: 100ms
    on_press:
      then:
        - homeassistant.service:
            service: automation.turn_on
            data:
              entity_id: automation.presence_studio_out
    on_release:
      then:
        - homeassistant.service:
            service: automation.turn_off
            data:
              entity_id: automation.presence_studio_out

  - platform: gpio
    id: switch2
    pin:
      pcf8574: pcf8574_hub
      number: 10
      mode:
        input: true
    filters:
      - delayed_on_off: 100ms
    on_press:
      then:
        - mqtt.publish:
            topic: zigbee2mqtt/studio_fan/set
            payload: "ON"
    on_release:
      then:
        - mqtt.publish:
            topic: zigbee2mqtt/studio_fan/set
            payload: "OFF"
  - platform: gpio
    id: switch3
    pin:
      pcf8574: pcf8574_hub
      number: 11
      mode:
        input: true

  - platform: gpio
    id: button3
    pin:
      pcf8574: pcf8574_hub
      number: 3
      mode:
        input: true
      inverted: true
    on_press:
      then:
        - mqtt.publish:
            topic: zigbee2mqtt/studio_light/set
            payload: "TOGGLE"
  - platform: gpio
    id: button2
    pin:
      pcf8574: pcf8574_hub
      number: 2
      mode:
        input: true
      inverted: true
    on_press:
      then:
        - mqtt.publish:
            topic: zigbee2mqtt/workshop_power/set
            payload: "TOGGLE"
  - platform: gpio
    id: button1
    pin:
      pcf8574: pcf8574_hub
      number: 1
      mode:
        input: true
      inverted: true
    on_click:
      then:
        - homeassistant.service:
            service: media_player.select_source
            data:
              source: OnePlus 5T
              entity_id: media_player.spotify_jaume_serrats9
    on_double_click:
      then:
        - homeassistant.service:
            service: media_player.select_source
            data:
              source: Pixel 7
              entity_id: media_player.spotify_jaume_serrats9
  - platform: gpio
    id: button0
    pin:
      pcf8574: pcf8574_hub
      number: 0
      mode:
        input: true
      inverted: true
    on_click:
      then:
        - homeassistant.service:
            service: media_player.media_play_pause
            data:
              entity_id: media_player.spotify_jaume_serrats9
    on_double_click:
      then:
        - homeassistant.service:
            service: media_player.media_next_track
            data:
              entity_id: media_player.spotify_jaume_serrats9
light:
  - platform: binary
    id: button3_light
    output: pin7
  - platform: binary
    id: button2_light
    output: pin6
  - platform: binary
    id: button1_light
    output: pin5
  - platform: binary
    id: button0_light
    output: pin4

uart:
  tx_pin: GPIO00
  rx_pin: GPIO01
  baud_rate: 256000
  parity: NONE
  stop_bits: 1

ld2410:

number:
  - platform: ld2410
    timeout:
      name: Studio presence timeout
    max_move_distance_gate:
      name: Studio max move distance gate
    max_still_distance_gate:
      name: Studio max still distance gate
    g2:
      move_threshold:
        name: Studio g2 move threshold
      still_threshold:
        name: Studio g2 still threshold
        
switch:
  - platform: ld2410
    bluetooth:
      name: "Studio LD2410 Bluetooth"

display:
  - platform: lcd_pcf8574
    dimensions: 20x4
    address: 0x27
    id: mydisplay
    update_interval: 1s
    lambda: |-
      // Print the current time
      it.strftime(6,0,"%X", id(esptime).now());
      it.strftime(1,1,"%a %d/%m/%Y W%W", id(esptime).now());

      int days = atoi(id(uptime).state.c_str())/(3600*24);
      it.printf(0,2, "UPTIME:%i", days);
      it.printf(10,2, "BIK:%s", id(sandwich_timer).state.c_str());
      it.printf(0,3,"PWR:%2.0f%W ", id(datacenter_power).state);
      it.printf(10,3,"TMP:%2.0fC ", id(temperature).state);

output:
  - platform: ledc
    pin: GPIO03
    id: rtttl_out
  - id: pin4
    platform: gpio
    pin:
      pcf8574: pcf8574_hub
      number: 4
      mode:
        output: true
  - id: pin5
    platform: gpio
    pin:
      pcf8574: pcf8574_hub
      number: 5
      mode:
        output: true
  - id: pin6
    platform: gpio
    pin:
      pcf8574: pcf8574_hub
      number: 6
      mode:
        output: true
  - id: pin7
    platform: gpio
    pin:
      pcf8574: pcf8574_hub
      number: 7
      mode:
        output: true

rtttl:
  output: rtttl_out

button:
  - platform: template
    name: "Studio Audio notification"
    on_press:
      then:
        - rtttl.play: "siren:d=8,o=5,b=100:d,e,d,e,d,e,d,e"
