esphome:
  name: esp-datacenter
  platform: ESP32
  board: esp32-c3-devkitm-1
  platformio_options:
    board_build.flash_mode: dio

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  use_address: esp-datacenter.iot

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

mqtt:
  broker: mqtt.jserrats.xyz
  discovery: false

esp32_ble_tracker:

time:
- platform: sntp
  id: esptime

i2c:
  sda: GPIO04
  scl: GPIO05
  frequency: 400kHz

pcf8574:
  - id: 'pcf8574_hub'
    address: 0x20
    pcf8575: false
  - id: 'pcf8574_hub2'
    address: 0x27
    pcf8575: false

sensor:
  - platform: homeassistant
    id: temperature
    entity_id: weather.can_garri
    attribute: temperature
  - platform: homeassistant
    name: "sensor.shelly1pm0_power"
    id: shelly1pm0_power
    entity_id: sensor.shelly1pm0_power

  # https://esphome.io/components/sensor/xiaomi_miscale.html
  - platform: xiaomi_miscale
    mac_address: "E0:0F:2D:A6:78:41"
    weight:
      #name: " Mi Scale Weight"
      id: weight_miscale
      on_value:
        then:
          # - lambda: |-
          #     if (id(weight_miscale).state >= 70 && id(weight_miscale).state <= 90) {
          #       return id(weight_jaume).publish_state(x);}
          #     else if (id(weight_miscale).state >= 50 && id(weight_miscale).state <= 70) {
          #       return id(weight_judit).publish_state(x);}
          - mqtt.publish:
              topic: !lambda |-
                if (id(weight_miscale).state >= 70 && id(weight_miscale).state <= 90) return "esphome/ble2ha/weight/jaume";
                else return "esphome/ble2ha/weight/judit";
              payload: !lambda |-
                char buf[10];
                sprintf(buf,  "%1.3f", id(weight_miscale).state);
                return ((std::string) buf).c_str();
              retain: true
    impedance:
      id: impedance_miscale
      on_value:
        then:
            - mqtt.publish:
                topic: !lambda |-
                  if (id(weight_miscale).state >= 70 && id(weight_miscale).state <= 90) return "esphome/ble2ha/impedance/jaume";
                  else return "esphome/ble2ha/impedance/judit";
                payload: !lambda |-
                  char buf[10];
                  sprintf(buf,  "%1.3f", id(impedance_miscale).state);
                  return ((std::string) buf).c_str();
                retain: true

binary_sensor:
  - platform: homeassistant
    id: studio_light
    entity_id: light.studio_light
    on_press:
      then:
      - light.turn_on: button3_light
    on_release:
      then:
        - light.turn_off: button3_light
  - platform: ld2410
    has_target:
      name: Studio Presence
      on_state:
        then:
        - light.turn_on:
            id: led
            effect: "Scan"
            blue: 50%
            green: 50%
            red: 0%
        - delay: 2s
        - light.turn_off: led
      on_press:
        then:
          - lambda: |-
              id(mydisplay).backlight();
      on_release:
        then:
          - lambda: |-
              id(mydisplay).no_backlight();
  - platform: gpio
    id: switch0
    filters:
      - delayed_on_off: 0.1s
    pin:
      pcf8574: pcf8574_hub2
      number: 0
      mode:
        input: true
      inverted: true
  - platform: gpio
    id: switch1
    pin:
      pcf8574: pcf8574_hub2
      number: 1
      mode:
        input: true
      inverted: true
  - platform: gpio
    id: switch2
    pin:
      pcf8574: pcf8574_hub2
      number: 2
      mode:
        input: true
      inverted: true
  - platform: gpio
    id: switch3
    pin:
      pcf8574: pcf8574_hub2
      number: 3
      mode:
        input: true
      inverted: true
  - platform: gpio
    id: button3
    pin:
      pcf8574: pcf8574_hub
      number: 0
      mode:
        input: true
      inverted: true
    on_press:
      then:
        - homeassistant.service:
            service: light.toggle
            data:
              entity_id:  light.studio_light
  - platform: gpio
    id: button2
    pin:
      pcf8574: pcf8574_hub
      number: 2
      mode:
        input: true
      inverted: true
    on_press:
      then:
      - light.turn_on: button2_light
    on_release:
      then:
        - light.turn_off: button2_light
  - platform: gpio
    id: button1
    pin:
      pcf8574: pcf8574_hub
      number: 4
      mode:
        input: true
      inverted: true
    on_press:
      then:
      - light.turn_on: button1_light
    on_release:
      then:
        - light.turn_off: button1_light
  - platform: gpio
    id: button0
    pin:
      pcf8574: pcf8574_hub
      number: 6
      mode:
        input: true
      inverted: true
    on_press:
      then:
      - light.turn_on: button0_light
    on_release:
      then:
        - light.turn_off: button0_light
  
light:
  - platform: neopixelbus
    type: GRB
    variant: WS2811
    pin: GPIO06
    num_leds: 35
    id: led
    name: Datacenter led strip
    effects:
      - pulse:
      - addressable_rainbow:
      - addressable_scan:
          move_interval: 50ms
          scan_width: 5
      - addressable_twinkle:
      - addressable_random_twinkle:
      - addressable_fireworks:
      - addressable_flicker:
  - platform: binary
    id: button3_light
    output: pin1
  - platform: binary
    id: button2_light
    output: pin3
  - platform: binary
    id: button1_light
    output: pin5
  - platform: binary
    id: button0_light
    output: pin7

uart:
  tx_pin: GPIO00
  rx_pin: GPIO01
  baud_rate: 256000
  parity: NONE
  stop_bits: 1

ld2410:

number:
  - platform: ld2410
    timeout:
      name: Studio presence timeout
    max_move_distance_gate:
      name: Studio max move distance gate
    max_still_distance_gate:
      name: Studio max still distance gate
    g2:
      move_threshold:
        name: Studio g2 move threshold
      still_threshold:
        name: Studio g2 still threshold
switch:
  - platform: ld2410
    bluetooth:
      name: "STudio LD2410 Bluetooth"

display:
  - platform: lcd_pcf8574
    dimensions: 20x4
    address: 0x27
    id: mydisplay
    update_interval: 1s
    lambda: |-
      // Print the current time
      it.strftime(6,0,"%X", id(esptime).now());
      it.strftime(1,1,"%a %d/%m/%Y W%W", id(esptime).now());
      it.printf(1,3,"PWR:%2.0f%W ", id(shelly1pm0_power).state);
      it.printf(11,3,"TMP:%2.0fC ", id(temperature).state);

output:
  - platform: ledc
    pin: GPIO03
    id: rtttl_out
  - id: pin1
    platform: gpio
    pin:
      pcf8574: pcf8574_hub
      number: 1
      mode:
        output: true
  - id: pin3
    platform: gpio
    pin:
      pcf8574: pcf8574_hub
      number: 3
      mode:
        output: true
  - id: pin5
    platform: gpio
    pin:
      pcf8574: pcf8574_hub
      number: 5
      mode:
        output: true
  - id: pin7  
    platform: gpio
    pin:
      pcf8574: pcf8574_hub
      number: 7
      mode:
        output: true

rtttl:
  output: rtttl_out

button:
  - platform: template
    name: "Studio Audio notification"
    on_press:
       then:
          - rtttl.play: 'siren:d=8,o=5,b=100:d,e,d,e,d,e,d,e'
  - platform: template
    name: "Studio Light notification"
    on_press:
       then:
        - light.turn_on:
            id: led
            effect: "Scan"
            blue: 0%
            green: 0%
            red: 100%
        - delay: 4s
        - light.turn_off: led